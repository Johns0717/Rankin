/*
 *   Purpose: Modify the rotateLEDs() function to use the millis() function for timings. 
             This should lead to the most responsive and consistent behaviour.
 */
#define _CRT_SECURE_NO_WARNINGS

 /* rotateLEDs.c
 * Rotates a lighted LED to the right, wrapping around, with a reset button. */
#include <DAQlib.h>
#include <Windows.h>
#include <stdio.h>

 /* symbolic constants */
#define SIMULATOR 2
#define ON 1
#define OFF 0
#define RESET 0
#define LED0 0
#define NUM_LEDS 6
#define ONE_SECOND 1000

/* function prototypes */
void rotateLEDs(void);

/* main function */
int main(void)
{
	/* initialize simulator and run control loop */
	if (setupDAQ(SIMULATOR)) {
		rotateLEDs();
	}
	else {
		printf("Cannot initialize the DAQ\n");
	}
	return 0;
}

void rotateLEDs(void)
{
	int led = 0;

	/* initialize timing variable */
	int nexttime = millis();

	while (continueSuperLoop()) {
		int button0 = OFF; /* button state */
		int index; /* loop counter */

		/* get current time */
		int currenttime = millis();

		if (currenttime >= nexttime) {
			/* turn on/off LEDs */
			for (index = 0; index < NUM_LEDS; ++index) {
				digitalWrite(index, ON);
				Sleep(ONE_SECOND);
				digitalWrite(index, OFF);
			}

			nexttime += ONE_SECOND;
		}

		/* check reset button */
		if (digitalRead(button0) == ON) {
			led = 0;
			nexttime = currenttime;
		}
	}
}
